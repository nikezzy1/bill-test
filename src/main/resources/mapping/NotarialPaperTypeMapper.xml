<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lingsi.unp.mapper.notarial.NotarialPaperTypeMapper">
  <resultMap id="BaseResultMap" type="com.lingsi.unp.model.notarial.NotarialPaperType">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="personInvolved" jdbcType="VARCHAR" property="personInvolved" />
    <result column="businessType" jdbcType="VARCHAR" property="businessType" />
    <result column="paperNo" jdbcType="VARCHAR" property="paperNo" />
    <result column="pageCount" jdbcType="INTEGER" property="pageCount" />
    <result column="paperType" jdbcType="VARCHAR" property="paperType" />
    <result column="paperName" jdbcType="VARCHAR" property="paperName" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, personInvolved, businessType, paperNo, pageCount, paperType, paperName, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from notarial_paper_type
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from notarial_paper_type
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lingsi.unp.model.notarial.NotarialPaperType">
    insert into notarial_paper_type (id, personInvolved, businessType, 
      paperNo, pageCount, paperType, 
      paperName, remark)
    values (#{id,jdbcType=INTEGER}, #{personInvolved,jdbcType=VARCHAR}, #{businessType,jdbcType=VARCHAR}, 
      #{paperNo,jdbcType=VARCHAR}, #{pageCount,jdbcType=INTEGER}, #{paperType,jdbcType=VARCHAR}, 
      #{paperName,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lingsi.unp.model.notarial.NotarialPaperType">
    insert into notarial_paper_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="personInvolved != null">
        personInvolved,
      </if>
      <if test="businessType != null">
        businessType,
      </if>
      <if test="paperNo != null">
        paperNo,
      </if>
      <if test="pageCount != null">
        pageCount,
      </if>
      <if test="paperType != null">
        paperType,
      </if>
      <if test="paperName != null">
        paperName,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="personInvolved != null">
        #{personInvolved,jdbcType=VARCHAR},
      </if>
      <if test="businessType != null">
        #{businessType,jdbcType=VARCHAR},
      </if>
      <if test="paperNo != null">
        #{paperNo,jdbcType=VARCHAR},
      </if>
      <if test="pageCount != null">
        #{pageCount,jdbcType=INTEGER},
      </if>
      <if test="paperType != null">
        #{paperType,jdbcType=VARCHAR},
      </if>
      <if test="paperName != null">
        #{paperName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lingsi.unp.model.notarial.NotarialPaperType">
    update notarial_paper_type
    <set>
      <if test="personInvolved != null">
        personInvolved = #{personInvolved,jdbcType=VARCHAR},
      </if>
      <if test="businessType != null">
        businessType = #{businessType,jdbcType=VARCHAR},
      </if>
      <if test="paperNo != null">
        paperNo = #{paperNo,jdbcType=VARCHAR},
      </if>
      <if test="pageCount != null">
        pageCount = #{pageCount,jdbcType=INTEGER},
      </if>
      <if test="paperType != null">
        paperType = #{paperType,jdbcType=VARCHAR},
      </if>
      <if test="paperName != null">
        paperName = #{paperName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lingsi.unp.model.notarial.NotarialPaperType">
    update notarial_paper_type
    set personInvolved = #{personInvolved,jdbcType=VARCHAR},
      businessType = #{businessType,jdbcType=VARCHAR},
      paperNo = #{paperNo,jdbcType=VARCHAR},
      pageCount = #{pageCount,jdbcType=INTEGER},
      paperType = #{paperType,jdbcType=VARCHAR},
      paperName = #{paperName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>













  <select id="selectAll" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from notarial_paper_type
      <where>
          <trim suffixOverrides="and">
              <if test="personInvolved != null">
                  personInvolved = #{personInvolved} and
              </if>
              <if test="businessType != null">
                  businessType =#{businessType}
              </if>
          </trim>
      </where>
  </select>

  <select id="selectBySelective" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List" />
    from notarial_paper_type
      <where>
          <trim suffixOverrides="and">
              <if test="personInvolved != null">
                  personInvolved = #{personInvolved} and
              </if>
              <if test="businessType != null">
                  businessType = #{businessType} and
              </if>
              <if test="paperType != null">
                  paperType =#{paperType} and
              </if>
              <if test="paperNo != null">
                  paperNo =#{paperNo} and
              </if>
          </trim>
      </where>
  </select>

    <select id="selectBySelectiveSimple" resultType="com.lingsi.unp.dto.NotarialPaperTypeDto">
    select
      paperNo,
        paperType,
        paperName,
        pageCount
    from notarial_paper_type
      <where>
          <trim suffixOverrides="and">
              <if test="personInvolved != null">
                  personInvolved = #{personInvolved} and
              </if>
              <if test="businessType != null">
                  businessType = #{businessType} and
              </if>
              <if test="paperType != null">
                  paperType =#{paperType} and
              </if>
              <if test="paperNo != null">
                  paperNo =#{paperNo} and
              </if>
          </trim>
      </where>
  </select>
</mapper>